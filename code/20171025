//1.每三天一个功能，每周一个项目。
public class ICacheProvider{
	object Get(string key);
	void Set(string name,object value,int minutes,bool isAbsoluteExpiration,Action<string,object,string> onRemove);
	void Remove(string key);
	void Clear();
}

public class Caching{
	public static object Get(string key){
		return HttpRuntime.Cache.Get(name);
	}
	public static void Remove(string key){
		if(HttpRuntime.Cache[key]!=null){
			HttpRuntime.Cache.Remove(key);
		}
	}
	public static void Set(string key ,object value){
		Set(key,value,null);
	}
	public static void Set(string key,object value,CacheDependency cacheDependency){
		HttpRuntime.Cache.Insert(key,value,cacheDependency,Cache.NoAbsoluteExpiration,Timespan.FormMinutes(20));
	}
	public static void Set(string key,object value,int minutes){
		HttpRuntime.Cache.Insert(key,value,null,Cache.NoAbsoluteExpration,Timespan.FormMinutes(minutes));
	}
	public static void Set(string key,object value,int minutes,bool isAbsoluteExpiration,CacheItemRemoveCallback onRemoveCallback){
		if(isAbsoluteExpiration){
			HttpRuntime.Cache.Insert(key,object,null,DateTime.Now.AddMinutes(minutes),Cache.NoSlidingExpiration,CacheItemPriority.Normal,onRemoveCallback);		
		}else{
			HttpRuntime.Cache.Insert(key,value,null,Cache.NoAbsoluteExpration,Timespan.FromMinutes(minutes),CacheItemPriority.Normal,onRemoveCallback);
		}
	}
}