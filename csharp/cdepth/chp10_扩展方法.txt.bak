10.1 未引入扩展方法之前的状态
10.2 扩展方法的语法
10.3 .net 3.5 中的扩展方法
10.4 使用思路和原则


10.1 未引入扩展方法之前的状态
	c#3 引入了扩展方法的概念。既有静态方法的优点，又使可读性提高
	链接：chaining

	扩展方法 与 c#1 和 c#2 的静态方法相比，是更理想的解决方法。尤其是
	创建工具类的时候
	
	IList<T> 提供了一个 完全通用的排序过程所需的全部构造块。
	IList<T>,设计成一个抽象类，包含排序功能。
	扩展方法。IList<T> 任何排序
	Linq的许多功能都是 围绕接口上的 扩展方法建立起来的。
	System.IO.Stream.
	Stream是.NET的二进制通信的基础。
	Stream是抽象类
		派生类：NetworkStream
			FileStream
			MemoryStream;
	#
	public static class StreamUtil{
		const int BufferSize=8192;
		public static void Copy(Stream input,Stream output){
			byte[] buffer=new byte[BufferSize];
			int read;
			while((read=input.Read(buffer,0,buffer.Length))>0){
				output.Write(buffer,0,read);
			}
		}

		public static byte[] ReadFully(Stream input){
			using(MemoryStream tempStream=new MemoryStream()){
				Copy(input,tempStream);
				return tempStream.toArray();
			}
		}
	}
	#
	WebRequest request=WebRequset.Create("http://mainning.com");
	using(WebRespons response=request.GetResponse())
	using(Stream responseStream=response.GetResponseStream())
	using(FileStream output=File.Create("response.dat")){
		StreamUtil.Copy(responseStream,output);
	}

10.2 扩展方法的语法
	扩展类型：extended type.
	要求：  第一：至少一个参数   不能用ref,out修饰。
		第二：第一个参数用this 标识。
		第三：方法必须是静态方法。

	public static class StreamUtil{
		const int BufferSize=8192;
		public static void CopyTo(this Stream input,Stream output){
			int read;
			byte[] buffer=new byte[BufferSize];
			while((read=input.Read(buffer,0,buffer.Length))){
				output.Write(buffer,0,read);
			}
		}
		public static byte ReadFully(this Stream input){
			using(MemoryStream tempStream=new MemoryStream()){
				Copy(input,tempStream);
				return tempStream.ToArray();
			}
		}
	}
	# 调用扩展方法
	# 在空引用上调用方法
	# 
	c#3 中 扩展方法，可以和扩展类型的一个现有的静态方法具有相同的签名。
	如,string 有一个 静态，无参的 IsNullOrEmpty();
	   你让然可以创建并使用扩展方法
	   public static bool IsNullOrEmpty(this string text){
		return string.IsNullOrEmpty(text);
	   }
10.3 .NET 3.5 中的扩展方法
	 在框架中，扩展方法，就是为Linq服务的。
	 有的linq提供器 包含了 几个 供辅助的扩展方法。
	 Enumerable,Queryable. 都在System.Linq命名空间中。
	 两个类，Enumerable,Queryable.在 System.Linq中。包含大量扩展方法。
	 Enumerable类中，大多扩展的 IEnumerable<T>;
	 Queryable类中，大多扩展的 IQueryable<T>;

